#!/bin/bash


users () {

hostname=""
username=""
userpasswd=""
rootpasswd=""



while true; do
username=$(dialog --title "Crea una cuenta de usuario" \
--nocancel --inputbox "\nIntroduzca un nombre de usuario para el nuevo Usuario \
\n\nEl nombre de usuario debe comenzar con una letra minúscula,\nque puede ir \
seguida de cualquier combinación de números,\nletras más minúsculas o el símbolo de guión. [ - ] \
\n\nNombre de usuario de su cuenta:" 14 65 3>&1 1>&2 2>&3)

    if [ $? -eq 0 ]; then
    #El nombre de usuario debe comenzar con una letra minúscula. 
    #Puede contener minúsculas alfanuméricas y guiones.
      if printf "%s" "$username" | grep -Eoq "^[a-z][a-z0-9-]*$" \
        && [ "${#username}" -lt 33 ]; then
        # El archivo de nombre de usuario reservado contiene nombres de usuario que deben evitarse
        if grep -Fxq "$username" reserved_usernames ; then
          dialog --title "ERROR: Nombre de usuario reservado" \
          -msgbox "El nombre de usuario que ingresaste ($username) está reservado \
          para uso del sistema. Seleccione uno diferente." 6 70
        else 
          inputs_match=false
          while ! $inputs_match; do
            input=$(dialog --title "Establecer la contraseña para $username" --clear \
              --stdout --nocancel --insecure --passwordbox "\n\nElija una contraseña para el nuevo usuario:" 08 60)
            confirm_input=$(dialog --title "Establecer la contraseña para $username" \
              --clear --stdout --insecure \
              --passwordbox "Vuelva a ingresar la contraseña para verificar:" 8 55)

            if [ -z "$input" ]; then
              dialog --title "ERROR: contraseña vacía" \
                --msgbox "No se le permite tener una contraseña vacía." 5 55
            elif [ "$input" != "$confirm_input" ]; then
              dialog --title "ERROR: Las contraseñas no coinciden" \
                --msgbox "Las dos contraseñas que ha introducido no coinciden." 5 55
            else
              userpasswd="$input"
              inputs_match=true
            fi
          done
          break
        fi
      else
        dialog --title "ERROR: Formato de nombre de usuario no válido" \
        --msgbox "Ingresaste un nombre de usuario no válido.\n\n \
        El nombre de usuario debe comenzar con una letra minúscula, \
        que puede ir seguida de cualquier combinación de números, \
        más letras minúsculas o el símbolo de guión, y no debe tener más de 32 caracteres." 9 80
      fi
    fi
  done



while true; do
    hostname=$(dialog --backtitle "$titulo" --nocancel \
    --inputbox "El hostname es una sola palabra que identifica su sistema en la red. \
    \n\nPor favor ingrese el nombre de host para este sistema:" \
12 80 "ArcriS" 3>&1 1>&2 2>&3)


    # Hostname must be alpha-numeric and may contain a dash only in between
    if printf "%s" "$hostname" | grep -Eoq "^[a-zA-Z0-9-]{1,63}$" \
      && [ "${hostname:0:1}" != "-" ] \
      && [ "${hostname: -1}" != "-" ]; then
      break
    else
      dialog --backtitle "$titulo"  --title "| ERROR: Formato de nombre no válido |" \
        --msgbox "\nIngresó un nombre de host no válido. \n\nUn nombre de host válido puede \
contienen solo los números 0-9, letras mayúsculas y minúsculas (A-Z y a-z), y \
el signo menos.\n\nDebe tener como máximo 63 caracteres y no puede comenzar \
o terminar con un signo menos." 12 75
    fi

  done



inputs_match=false
  while ! $inputs_match; do
    input=$(dialog --title "Establecer la contraseña de root" --clear --stdout --nocancel \
      --insecure --passwordbox "Introduzca una contraseña para 'root',\n \
      la cuenta de administrador del sistema. \
      \n\nContraseña de root:" 10 50)
    confirm_input=$(dialog --title "Establecer la contraseña de root" --clear --stdout \
      --insecure --passwordbox "Vuelva a ingresar la contraseña para verificar:" 8 55)
        

    if [ -z "$input" ]; then
      dialog --title "ERROR: contraseña vacía" \
        --msgbox "No se le permite tener una contraseña vacía." 5 55
    elif [ "$input" != "$confirm_input" ]; then
      dialog --title "ERROR: las contraseñas no coinciden" \
        --msgbox "Las dos contraseñas que ha introducido no coinciden." 5 55
    else
      rootpasswd="$input"
      inputs_match=true
    fi
  done





}